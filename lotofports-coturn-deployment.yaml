apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yaml
    kompose.version: 1.27.0 (b0ed6a2c9)
  creationTimestamp: null
  labels:
    io.kompose.service: coturn
  name: coturn
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: coturn
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yaml
        kompose.version: 1.27.0 (b0ed6a2c9)
      creationTimestamp: null
      labels:
        io.kompose.service: coturn
        app: coturn
    spec:
      containers:
        - env:
            - name: IS_TURN_ON_AWS
              value: "true"
            - name: PRIVATE_IP
            - name: PUBLIC_IP
            - name: TURN_PASSWORD
            - name: TURN_USER
          image: 376474804475.dkr.ecr.eu-west-1.amazonaws.com/recording-turn:latest
          name: coturn
          ports:
            - containerPort: 3478
              protocol: TCP
            {{- range seq 55000 55100}}
            - protocol: UDP
              containerPort: {{add .}}
            {{- end -}}
          resources: {}
          tty: true
          volumeMounts:
            - mountPath: /var/log/turnserver/
              name: coturn-claim0
      restartPolicy: Always
      volumes:
        - name: coturn-claim0
          persistentVolumeClaim:
            claimName: coturn-claim0
status: {}
